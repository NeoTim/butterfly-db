### YamlMime:ManagedReference
items:
- uid: Butterfly.Db.IDynamicParam
  commentId: T:Butterfly.Db.IDynamicParam
  id: IDynamicParam
  parent: Butterfly.Db
  children:
  - Butterfly.Db.IDynamicParam.GetValue
  langs:
  - csharp
  - vb
  name: IDynamicParam
  nameWithType: IDynamicParam
  fullName: Butterfly.Db.IDynamicParam
  type: Interface
  source:
    remote:
      path: Butterfly.Db/IDynamicParam.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-db
    id: IDynamicParam
    path: ../Butterfly.Db/IDynamicParam.cs
    startLine: 8
  assemblies:
  - Butterfly.Db
  namespace: Butterfly.Db
  summary: "\nUse to implement a parameter value that can change\n"
  example: []
  syntax:
    content: public interface IDynamicParam
    content.vb: Public Interface IDynamicParam
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: Butterfly.Db.IDynamicParam.GetValue
  commentId: M:Butterfly.Db.IDynamicParam.GetValue
  id: GetValue
  parent: Butterfly.Db.IDynamicParam
  langs:
  - csharp
  - vb
  name: GetValue()
  nameWithType: IDynamicParam.GetValue()
  fullName: Butterfly.Db.IDynamicParam.GetValue()
  type: Method
  source:
    remote:
      path: Butterfly.Db/IDynamicParam.cs
      branch: master
      repo: https://github.com/firesharkstudios/butterfly-db
    id: GetValue
    path: ../Butterfly.Db/IDynamicParam.cs
    startLine: 9
  assemblies:
  - Butterfly.Db
  namespace: Butterfly.Db
  syntax:
    content: object GetValue()
    return:
      type: System.Object
    content.vb: Function GetValue As Object
  overload: Butterfly.Db.IDynamicParam.GetValue*
references:
- uid: Butterfly.Db
  commentId: N:Butterfly.Db
  name: Butterfly.Db
  nameWithType: Butterfly.Db
  fullName: Butterfly.Db
- uid: Butterfly.Db.IDynamicParam.GetValue*
  commentId: Overload:Butterfly.Db.IDynamicParam.GetValue
  name: GetValue
  nameWithType: IDynamicParam.GetValue
  fullName: Butterfly.Db.IDynamicParam.GetValue
- uid: System.Object
  commentId: T:System.Object
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
shouldSkipMarkup: true
